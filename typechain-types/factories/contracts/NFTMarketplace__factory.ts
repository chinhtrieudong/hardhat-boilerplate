/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NFTMarketplace,
  NFTMarketplaceInterface,
} from "../../contracts/NFTMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_listingPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "buyNft",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "changeNftPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "delistNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "isSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "items",
    outputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isSold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "listNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "listingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "nftPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015cd380380620015cd833981810160405281019062000037919062000178565b620000576200004b6200006c60201b60201c565b6200007460201b60201c565b600180819055508060028190555050620001aa565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b62000152816200013d565b81146200015e57600080fd5b50565b600081519050620001728162000147565b92915050565b60006020828403121562000191576200019062000138565b5b6000620001a18482850162000161565b91505092915050565b61141380620001ba6000396000f3fe60806040526004361061009c5760003560e01c8063715018a611610064578063715018a6146101895780638da5cb5b146101a0578063bfb231d2146101cb578063c78f19f91461020c578063c922b17c14610237578063f2fde38b146102675761009c565b80630110a176146100a157806314eb055d146100de578063243adbdd146101075780634e791483146101235780636de299141461014c575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610d97565b610290565b6040516100d59190610ddf565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610dfa565b6102cc565b005b610121600480360381019061011c9190610d97565b6103e4565b005b34801561012f57600080fd5b5061014a60048036038101906101459190610d97565b6105cb565b005b34801561015857600080fd5b50610173600480360381019061016e9190610d97565b610807565b6040516101809190610e49565b60405180910390f35b34801561019557600080fd5b5061019e610836565b005b3480156101ac57600080fd5b506101b561084a565b6040516101c29190610ea5565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed9190610d97565b610873565b604051610203959493929190610ee1565b60405180910390f35b34801561021857600080fd5b50610221610906565b60405161022e9190610e49565b60405180910390f35b610251600480360381019061024c9190610f60565b61090c565b60405161025e9190610e49565b60405180910390f35b34801561027357600080fd5b5061028e60048036038101906102899190610fb3565b610b6b565b005b6000600382815481106102a6576102a5610fe0565b5b906000526020600020906004020160030160149054906101000a900460ff169050919050565b6000600383815481106102e2576102e1610fe0565b5b906000526020600020906004020190503373ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b9061106c565b60405180910390fd5b8060030160149054906101000a900460ff16156103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd906110d8565b60405180910390fd5b818160020181905550505050565b6000600382815481106103fa576103f9610fe0565b5b9060005260206000209060040201905034816002015414610450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044790611144565b60405180910390fd5b600015158160030160149054906101000a900460ff161515146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049f906110d8565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b815260040161050d93929190611164565b600060405180830381600087803b15801561052757600080fd5b505af115801561053b573d6000803e3d6000fd5b505050508060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156105a9573d6000803e3d6000fd5b5060018160030160146101000a81548160ff0219169083151502179055505050565b6000600382815481106105e1576105e0610fe0565b5b906000526020600020906004020190503373ffffffffffffffffffffffffffffffffffffffff168160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a906111e7565b60405180910390fd5b8060030160149054906101000a900460ff16156106d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cc906110d8565b60405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd303384600101546040518463ffffffff1660e01b815260040161073a93929190611164565b600060405180830381600087803b15801561075457600080fd5b505af1158015610768573d6000803e3d6000fd5b50505050600382815481106107805761077f610fe0565b5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556003820160146101000a81549060ff021916905550505050565b60006003828154811061081d5761081c610fe0565b5b9060005260206000209060040201600201549050919050565b61083e610bee565b6108486000610c6c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6003818154811061088357600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160149054906101000a900460ff16905085565b60025481565b6000808211610950576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094790611253565b60405180910390fd5b6002543414610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b906112bf565b60405180910390fd5b61099e6004610d30565b60006109aa6004610d46565b90508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016109e993929190611164565b600060405180830381600087803b158015610a0357600080fd5b505af1158015610a17573d6000803e3d6000fd5b5050505060036040518060a001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160001515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160030160146101000a81548160ff0219169083151502179055505050809150509392505050565b610b73610bee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd990611351565b60405180910390fd5b610beb81610c6c565b50565b610bf6610d54565b73ffffffffffffffffffffffffffffffffffffffff16610c1461084a565b73ffffffffffffffffffffffffffffffffffffffff1614610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c61906113bd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600033905090565b600080fd5b6000819050919050565b610d7481610d61565b8114610d7f57600080fd5b50565b600081359050610d9181610d6b565b92915050565b600060208284031215610dad57610dac610d5c565b5b6000610dbb84828501610d82565b91505092915050565b60008115159050919050565b610dd981610dc4565b82525050565b6000602082019050610df46000830184610dd0565b92915050565b60008060408385031215610e1157610e10610d5c565b5b6000610e1f85828601610d82565b9250506020610e3085828601610d82565b9150509250929050565b610e4381610d61565b82525050565b6000602082019050610e5e6000830184610e3a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8f82610e64565b9050919050565b610e9f81610e84565b82525050565b6000602082019050610eba6000830184610e96565b92915050565b6000610ecb82610e64565b9050919050565b610edb81610ec0565b82525050565b600060a082019050610ef66000830188610e96565b610f036020830187610e3a565b610f106040830186610e3a565b610f1d6060830185610ed2565b610f2a6080830184610dd0565b9695505050505050565b610f3d81610e84565b8114610f4857600080fd5b50565b600081359050610f5a81610f34565b92915050565b600080600060608486031215610f7957610f78610d5c565b5b6000610f8786828701610f4b565b9350506020610f9886828701610d82565b9250506040610fa986828701610d82565b9150509250925092565b600060208284031215610fc957610fc8610d5c565b5b6000610fd784828501610f4b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f6e6c792073656c6c65722063616e206368616e676520707269636500000000600082015250565b6000611056601c8361100f565b915061106182611020565b602082019050919050565b6000602082019050818103600083015261108581611049565b9050919050565b7f4974656d20697320616c726561647920736f6c64000000000000000000000000600082015250565b60006110c260148361100f565b91506110cd8261108c565b602082019050919050565b600060208201905081810360008301526110f1816110b5565b9050919050565b7f5072696365206973206e6f7420636f7272656374000000000000000000000000600082015250565b600061112e60148361100f565b9150611139826110f8565b602082019050919050565b6000602082019050818103600083015261115d81611121565b9050919050565b60006060820190506111796000830186610e96565b6111866020830185610e96565b6111936040830184610e3a565b949350505050565b7f4f6e6c792073656c6c65722063616e2064656c697374206974656d0000000000600082015250565b60006111d1601b8361100f565b91506111dc8261119b565b602082019050919050565b60006020820190508181036000830152611200816111c4565b9050919050565b7f6d757374206265206174206c6561737420312077656900000000000000000000600082015250565b600061123d60168361100f565b915061124882611207565b602082019050919050565b6000602082019050818103600083015261126c81611230565b9050919050565b7f6d75737420657175616c20746f206c697374696e672070726963650000000000600082015250565b60006112a9601b8361100f565b91506112b482611273565b602082019050919050565b600060208201905081810360008301526112d88161129c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061133b60268361100f565b9150611346826112df565b604082019050919050565b6000602082019050818103600083015261136a8161132e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113a760208361100f565b91506113b282611371565b602082019050919050565b600060208201905081810360008301526113d68161139a565b905091905056fea264697066735822122068def8c46e0c063eae849186fc9ff723023b4e9f46d3cedfa50d9d3767165cd564736f6c63430008110033";

type NFTMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarketplace__factory extends ContractFactory {
  constructor(...args: NFTMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _listingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFTMarketplace> {
    return super.deploy(
      _listingPrice,
      overrides || {}
    ) as Promise<NFTMarketplace>;
  }
  override getDeployTransaction(
    _listingPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_listingPrice, overrides || {});
  }
  override attach(address: string): NFTMarketplace {
    return super.attach(address) as NFTMarketplace;
  }
  override connect(signer: Signer): NFTMarketplace__factory {
    return super.connect(signer) as NFTMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketplaceInterface {
    return new utils.Interface(_abi) as NFTMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NFTMarketplace;
  }
}
